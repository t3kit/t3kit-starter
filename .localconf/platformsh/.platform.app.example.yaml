# This file describes an application. You can have multiple applications
# in the same project.

# The name of this app. Must be unique within a project.
name: app

# The type of the application to build.
type: php:8

timezone: "Europe/Stockholm"

build:
  flavor: composer

runtime:
  request_terminate_timeout: 50
  sizing_hints:
    request_memory: 20
  extensions:
    - redis

dependencies:
  php:
    composer/composer: '^2.1'

variables:
  php:
    max_execution_time: 45
    "date.timezone": "Europe/Stockholm"
  env:
    NVM_VERSION: v0.39.0
    NODE_VERSION: v16.13.0

    # Overwrite the default TYPO3 Cache-control header with env:OVERWRITE_DEFAULT_CACHE_CONTROL_HEADER
    OVERWRITE_DEFAULT_CACHE_CONTROL_HEADER: Cache-control:max-age=300

    # uncomment env-s below if using solr
    # SOLR_CORE_EN: 'core_en'
    # SOLR_CORE_SV: 'core_sv'
    # SOLR_CORE_DE: 'core_de'
    # SOLR_CORE_NO: 'core_no'
    # SOLR_CORE_DA: 'core_da'
    # SOLR_CORE_FR: 'core_fr'
    # SOLR_HOST_MAIN: 'solrmain.internal'
    # SOLR_HOST_SITE2: 'solrsite2.internal'
    # SOLR_PORT: '8080'

# The relationships of the application with services or other applications.
# The left-hand side is the name of the relationship as it will be exposed
# to the application in the PLATFORM_RELATIONSHIPS variable. The right-hand
# side is in the form `<service name>:<endpoint name>`.
relationships:
  database: 'db:mysql'
  rediscache: 'cache:redis'
  # -SOLR- uncomment if using solr
  # solrmain: 'solrsearch:main'
  # solrsite2: 'solrsearch:site2'

# The configuration of app when it is exposed to the web.
web:
  locations:
    '/':
      root: 'public'
      passthru: '/index.php'
      index:
        - 'index.php'
      allow: false
      headers:
        X-Content-Type-Options: nosniff
      rules:
        '/typo3/':
          passthru: '/typo3/index.php$is_args$args'
        '^\/typo3conf\/ext\/.*\/Resources\/Public\/assets\/development\/?.*\.(css|js)$':
          allow: true
          passthru: false
          scripts: false
          expires: -1
        '^\/typo3conf\/ext\/.*\/Resources\/Public\/assets\/production\/?.*\.(css|js)$':
          allow: true
          passthru: false
          scripts: false
          expires: 1y
        '^\/typo3conf\/ext\/.*\/Resources\/Public\/assets\/Favicons\/browserconfig.xml$':
          allow: true
          passthru: false
          scripts: false
          expires: 1M
        '\.(jpe?g|png|gif|svgz?|html|css|js|map|ico|bmp|eot|woff2?|otf|ttf|webmanifest|xsl)$':
          allow: true
          passthru: false
          scripts: false
          expires: 1M
        # Disallow access to:
        '^/(wp-login\.php|wp-login|login\.php|wp-content|wp-admin|wp-cofigs\.php|wp-pot\.php|wp-404\.php|xmlrpc\.php|wp-load\.php|wp-json|cgi|CGI|home\.php|seo-joy\.cgi|light\.cgi|gastenboek\.php|bbs\.cgi|aska\.cgi|jax_guestbook\.php|wp/|phpmyadmin|phpMyAdmin|pma|sql|default\.htm|index\.html|backup|bitcoin|admin\.php|autodiscover/autodiscover\.xml)':
          scripts: false
          allow: false
          passthru: false
        '(/tel:|test\.php|modules\.php|install\.php)':
          scripts: false
          allow: false
          passthru: false
        '\.(asp|aspx|esp|cgi|dat)$':
          scripts: false
          allow: false
          passthru: false
    '/fileadmin':
      root: 'public/fileadmin'
      expires: 1M
      scripts: false
      passthru: false
      allow: true
      headers:
        Content-Security-Policy: default-src 'self'; script-src 'none'; style-src 'none'; object-src 'none';
    '/typo3temp':
      root: 'public/typo3temp'
      expires: 1M
      scripts: false
      passthru: false
      allow: true
      rules:
        '\.js\.gzip$':
          expires: 1M
          headers:
            Content-Type: text/javascript
            Content-Encoding: gzip
        '\.css\.gzip$':
          expires: 1M
          headers:
            Content-Type: text/css
            Content-Encoding: gzip
    '/typo3conf/LocalConfiguration.php':
      scripts: false
      allow: false
      passthru: false
    '/typo3conf/AdditionalConfiguration.php':
      scripts: false
      allow: false
      passthru: false
    '/typo3conf/PlatformshConfiguration.php':
      scripts: false
      allow: false
      passthru: false

# The size of the persistent disk of the application (in MB).
disk: 2048

# The mounts that will be performed when the package is deployed.
mounts:
  "public/typo3temp":
    source: local
    source_path: "typo3temp"
  "public/fileadmin":
    source: local
    source_path: "fileadmin"
  "var":
    source: local
    source_path: "var"

# The hooks that will be performed when the package is deployed.
hooks:
  build: |
    set -e

    # Instal NodeJS
    unset NPM_CONFIG_PREFIX
    export NVM_DIR="$PLATFORM_APP_DIR/.nvm"
    # install.sh will automatically install NodeJS based on the presence of $NODE_VERSION
    curl -f -o- https://raw.githubusercontent.com/nvm-sh/nvm/$NVM_VERSION/install.sh | bash
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"

    # Install npm@^8
    npm install -g npm@^8

    # Install npm dependencies
    npm ci --ignore-scripts

    # Build assests for themes
    if [ "$TYPO3_CONTEXT" = Development ]; then
      npm run dev
    else
      npm run prod
    fi

    # Install the CLI on a Platform.sh environment
    curl -sS https://platform.sh/cli/installer | php

    # if [ -f public/typo3conf/LocalConfiguration.php ]; then
    #    mv public/typo3conf/LocalConfiguration.php public/typo3conf/LocalConfiguration.FromSource.php
    #    ln -sf ../../var/LocalConfiguration.php public/typo3conf/LocalConfiguration.php
    # fi;

  deploy: |
    set -e

    # cp public/typo3conf/LocalConfiguration.FromSource.php var/LocalConfiguration.php

    vendor/bin/typo3 extension:setup
    vendor/bin/typo3 language:update
    vendor/bin/typo3 cache:flush

crons:
  typo3scheduler:
    # run at every 7th minute
    spec: "*/7 * * * *"
    cmd: "vendor/bin/typo3 scheduler:run"
  backup:
    # Take a backup automatically every night at 2 am (UTC).
    spec: '0 2 * * *'
    cmd: |
      if [ "$PLATFORM_BRANCH" = master ]; then
        platform backup:create --yes --no-wait
      fi
